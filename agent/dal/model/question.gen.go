// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameQuestion = "question"

// Question mapped from table <question>
type Question struct {
	CreatedAt   time.Time      `gorm:"column:created_at;type:datetime;not null" json:"created_at"`
	UpdatedAt   time.Time      `gorm:"column:updated_at;type:datetime" json:"updated_at"`
	IsDeleted   bool           `gorm:"column:is_deleted;type:tinyint(1);not null" json:"is_deleted"`
	DeletedAt   gorm.DeletedAt `gorm:"column:deleted_at;type:datetime" json:"deleted_at"`
	ID          int32          `gorm:"column:id;type:int;primaryKey;autoIncrement:true" json:"id"`
	UserID      int32          `gorm:"column:user_id;type:int" json:"user_id"`
	Subject     string         `gorm:"column:subject;type:varchar(255);not null" json:"subject"`
	Grade       string         `gorm:"column:grade;type:varchar(255);not null" json:"grade"`
	Difficulty  string         `gorm:"column:difficulty;type:varchar(255);not null" json:"difficulty"`
	Type        string         `gorm:"column:type;type:varchar(255);not null" json:"type"`
	Content     string         `gorm:"column:content;type:varchar(255);not null" json:"content"`
	Options     string         `gorm:"column:options;type:varchar(255)" json:"options"`
	Answer      string         `gorm:"column:answer;type:varchar(255);not null" json:"answer"`
	Explanation string         `gorm:"column:explanation;type:varchar(255)" json:"explanation"`
	IsPublic    bool           `gorm:"column:is_public;type:tinyint(1);not null" json:"is_public"`
	Tag         string         `gorm:"column:tag;type:varchar(255)" json:"tag"`
	SourceID    string         `gorm:"column:source_id;type:varchar(255)" json:"source_id"`
}

// TableName Question's table name
func (*Question) TableName() string {
	return TableNameQuestion
}
