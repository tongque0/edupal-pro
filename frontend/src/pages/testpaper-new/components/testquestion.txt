<div className="border rounded-md p-3">
<div className="flex items-center justify-between mb-3">
  <h2 className="text-sm font-medium text-gray-500">
    已选题目 ({selectedQuestions.length})
  </h2>
  <Button size="sm" variant="outline" className="h-7">
    <Plus className="h-3.5 w-3.5 mr-1" /> 手动添加
  </Button>
</div>

<Separator className="my-2" />

{/* 已选题目列表 - 可拖动排序 */}
<DragDropContext onDragEnd={handleDragEnd}>
  <Droppable droppableId="selected-questions">
    {(provided, snapshot) => (
      <div
        {...provided.droppableProps}
        ref={provided.innerRef}
        className={`space-y-2 max-h-[calc(100vh-200px)] overflow-y-auto pr-1 ${
          snapshot.isDraggingOver ? "bg-gray-50" : ""
        }`}
      >
        {selectedQuestions.map((question, index) => (
          <Draggable
            key={question.id}
            draggableId={question.id}
            index={index}
          >
            {(provided, snapshot) => (
              <div
                ref={provided.innerRef}
                {...provided.draggableProps}
                className={`border rounded-md p-2 ${
                  snapshot.isDragging
                    ? "bg-gray-100 shadow-md"
                    : "hover:bg-gray-50"
                }`}
              >
                <div className="flex justify-between items-start">
                  <div className="flex items-start gap-2">
                    <div
                      {...provided.dragHandleProps}
                      className="cursor-grab mt-0.5 text-gray-400 hover:text-gray-600"
                    >
                      <GripVertical className="h-4 w-4" />
                    </div>
                    <div>
                      <div className="font-medium text-sm">
                        {index + 1}. {question.question}
                      </div>
                      <div className="text-xs text-gray-500 mt-1">
                        {question.type}{" "}
                        {question.difficulty &&
                          `· ${question.difficulty}`}
                      </div>
                    </div>
                  </div>
                  <div className="flex gap-1">
                    <Button
                      size="sm"
                      variant="ghost"
                      className="h-7 w-7 p-0"
                    >
                      <Eye className="h-3.5 w-3.5" />
                    </Button>
                    <Button
                      size="sm"
                      variant="ghost"
                      className="h-7 w-7 p-0 text-red-500"
                      onClick={() => removeQuestion(index)}
                    >
                      <X className="h-3.5 w-3.5" />
                    </Button>
                  </div>
                </div>
              </div>
            )}
          </Draggable>
        ))}
        {provided.placeholder}
        {selectedQuestions.length === 0 && (
          <div className="text-center py-8 text-gray-500 text-sm">
            暂无选择的题目，请从左侧题库中添加
          </div>
        )}
      </div>
    )}
  </Droppable>
</DragDropContext>
</div>
